diff --git a/src/com/android/phone/PhoneGlobals.java b/src/com/android/phone/PhoneGlobals.java
index de1ecd5..824cb0c 100644
--- a/src/com/android/phone/PhoneGlobals.java
+++ b/src/com/android/phone/PhoneGlobals.java
@@ -87,6 +87,10 @@ import static com.android.internal.telephony.MSimConstants.SUBSCRIPTION_KEY;
 
 import org.codeaurora.ims.csvt.ICsvtService;
 
+// Patch airplane
+import android.net.ConnectivityManager;
+//End Patch
+
 /**
  * Global state for the telephony subsystem when running in the primary
  * phone process.
@@ -1180,6 +1184,9 @@ public class PhoneGlobals extends ContextWrapper implements WiredHeadsetListener
             if (action.equals(Intent.ACTION_AIRPLANE_MODE_CHANGED)) {
                 boolean enabled = System.getInt(getContentResolver(),
                         System.AIRPLANE_MODE_ON, 0) == 0;
+                // Patch. Airplane
+                ConnectivityManager cm = (ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
+                // End patch
 
                 // Set the airplane mode property for RIL to read on boot up
                 // to know if the phone is in airplane mode so that RIL can
@@ -1189,6 +1196,16 @@ public class PhoneGlobals extends ContextWrapper implements WiredHeadsetListener
                 SystemProperties.set(PROPERTY_AIRPLANE_MODE_ON, (enabled ? "0" : "1"));
 
                 phone.setRadioPower(enabled);
+
+                // Patch. Airplane
+                if (enabled) {
+                    boolean dmode = cm.getMobileDataEnabled();
+                    cm.setMobileDataEnabled(false);
+                    cm.setMobileDataEnabled(true);
+                    cm.setMobileDataEnabled(dmode);
+                }
+                // End patch
+
             } else if (action.equals(TelephonyIntents.ACTION_ANY_DATA_CONNECTION_STATE_CHANGED)) {
                 if (VDBG) Log.d(LOG_TAG, "mReceiver: ACTION_ANY_DATA_CONNECTION_STATE_CHANGED");
                 if (VDBG) Log.d(LOG_TAG, "- state: " + intent.getStringExtra(PhoneConstants.STATE_KEY));
